// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UChi.CourseEvals.Data;

#nullable disable

namespace UChi.CourseEvals.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220309060548_MultipleCourseNumbers")]
    partial class MultipleCourseNumbers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProfessorSection", b =>
                {
                    b.Property<int>("ProfessorsId")
                        .HasColumnType("integer")
                        .HasColumnName("professors_id");

                    b.Property<int>("SectionsId")
                        .HasColumnType("integer")
                        .HasColumnName("sections_id");

                    b.HasKey("ProfessorsId", "SectionsId")
                        .HasName("pk_professor_section");

                    b.HasIndex("SectionsId")
                        .HasDatabaseName("ix_professor_section_sections_id");

                    b.ToTable("professor_section", (string)null);
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.ApiKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expires");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("issued");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<DateTime?>("LastUsed")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("last_used");

                    b.Property<long>("RequestCount")
                        .HasColumnType("bigint")
                        .HasColumnName("request_count");

                    b.HasKey("Id")
                        .HasName("pk_api_keys");

                    b.ToTable("api_keys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "test@test.com",
                            Expires = new DateTime(2022, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Issued = new DateTime(2022, 3, 9, 0, 5, 47, 866, DateTimeKind.Local).AddTicks(4830),
                            Key = "43ae2c82-dbf7-4e74-a5dc-d9d45783cc6e",
                            RequestCount = 0L
                        });
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("AverageSentiment")
                        .HasColumnType("double precision")
                        .HasColumnName("average_sentiment");

                    b.Property<string>("ChartData")
                        .HasColumnType("jsonb")
                        .HasColumnName("chart_data");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_courses");

                    b.ToTable("courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageSentiment = 0.69999999999999996,
                            ChartData = "{}",
                            Title = "Honors Introduction to Computer Science II"
                        });
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.CourseNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.Property<string>("DepartmentAndNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("department_and_number");

                    b.HasKey("Id")
                        .HasName("pk_course_numbers");

                    b.HasIndex("CourseId")
                        .HasDatabaseName("ix_course_numbers_course_id");

                    b.ToTable("course_numbers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            DepartmentAndNumber = "CMSC 16200"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            DepartmentAndNumber = "TEST 16200"
                        });
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_professors");

                    b.ToTable("professors", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fred Chong"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Hank Hoffmann"
                        });
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChartData")
                        .HasColumnType("jsonb")
                        .HasColumnName("chart_data");

                    b.Property<int>("CourseId")
                        .HasColumnType("integer")
                        .HasColumnName("course_id");

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("Quarter")
                        .HasColumnType("integer")
                        .HasColumnName("quarter");

                    b.Property<double>("Sentiment")
                        .HasColumnType("double precision")
                        .HasColumnName("sentiment");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_sections");

                    b.HasIndex("CourseId")
                        .HasDatabaseName("ix_sections_course_id");

                    b.ToTable("sections", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChartData = "{}",
                            CourseId = 1,
                            Number = 1,
                            Quarter = 1,
                            Sentiment = 0.80000000000000004,
                            Year = 2022
                        },
                        new
                        {
                            Id = 2,
                            ChartData = "{}",
                            CourseId = 1,
                            Number = 2,
                            Quarter = 1,
                            Sentiment = 0.80000000000000004,
                            Year = 2022
                        });
                });

            modelBuilder.Entity("ProfessorSection", b =>
                {
                    b.HasOne("UChi.CourseEvals.Domain.Entities.Instructor", null)
                        .WithMany()
                        .HasForeignKey("ProfessorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_professor_section_professors_professors_id");

                    b.HasOne("UChi.CourseEvals.Domain.Entities.Section", null)
                        .WithMany()
                        .HasForeignKey("SectionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_professor_section_sections_sections_id");
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.CourseNumber", b =>
                {
                    b.HasOne("UChi.CourseEvals.Domain.Entities.Course", null)
                        .WithMany("CourseNumbers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_course_numbers_courses_course_id");
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.Section", b =>
                {
                    b.HasOne("UChi.CourseEvals.Domain.Entities.Course", "Course")
                        .WithMany("Sections")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sections_courses_course_id");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("UChi.CourseEvals.Domain.Entities.Course", b =>
                {
                    b.Navigation("CourseNumbers");

                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
